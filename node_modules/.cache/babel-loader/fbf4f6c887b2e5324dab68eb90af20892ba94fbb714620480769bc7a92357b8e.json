{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/Documents/GitHub/weather-App/src/components/Current.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Key from '../Key';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Current = props => {\n  _s();\n  let [location, setLocation] = useState();\n  let [current, setCurrent] = useState();\n  useEffect(() => {\n    axios.get(`http://api.weatherapi.com/v1/current.json?key=${Key}&q=${zipCode}`).then(response => {\n      // handle success\n      setLocation(response.data.location);\n      setCurrent(response.data.current);\n    }).catch(error => {\n      // handle error\n      console.log(\"Error fetching and parsing data\", error);\n    });\n  }, []);\n  let temp = current.temp_f;\n  let uv = current.uv;\n  let precip = current.precip_in;\n  let humidity = current.humity;\n  let icon = current.condition.icon;\n  let city = location.name;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Current Weather for: $\", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperature: $\", temp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon,\n        alt: \"weather_icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"UV Index: $\", uv]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Humidity: $\", humidity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Precipitation: $\", precip]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Current, \"VsnQDAWfN2dydbZ67OUXjgNMzT0=\");\n_c = Current;\nexport default Current;\nvar _c;\n$RefreshReg$(_c, \"Current\");","map":{"version":3,"names":["React","useState","useEffect","axios","Key","Current","props","location","setLocation","current","setCurrent","get","zipCode","then","response","data","catch","error","console","log","temp","temp_f","uv","precip","precip_in","humidity","humity","icon","condition","city","name"],"sources":["/Users/brandon/Documents/GitHub/weather-App/src/components/Current.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Key from '../Key';\n\n\nconst Current = (props) => {\n    let [location, setLocation] = useState();\n    let [current, setCurrent] = useState();\n  \n    useEffect(() => {\n      axios.get(`http://api.weatherapi.com/v1/current.json?key=${Key}&q=${zipCode}`)\n     .then(response => {\n       // handle success\n       setLocation(response.data.location);\n       setCurrent(response.data.current);\n     })\n     .catch(error => {\n       // handle error\n       console.log(\"Error fetching and parsing data\", error);\n     });\n     },[]);\n    \n     let temp = current.temp_f;\n     let uv = current.uv;\n     let precip = current.precip_in;\n     let humidity = current.humity;\n     let icon = current.condition.icon;\n     let city = location.name; \n\n    return (\n        <div>\n            <h1>Current Weather for: ${city}</h1>\n\n            <p>Temperature: ${temp}</p>\n            <p><img src={icon} alt=\"weather_icon\" /></p>\n            <p>UV Index: ${uv}</p>\n            <p>Humidity: ${humidity}</p>\n            <p>Precipitation: ${precip}</p>\n\n        </div>\n\n    );\n\n    };\n\nexport default Current;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,QAAQ;AAAC;AAGzB,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACvB,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,EAAE;EACxC,IAAI,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,EAAE;EAEtCC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACQ,GAAG,CAAE,iDAAgDP,GAAI,MAAKQ,OAAQ,EAAC,CAAC,CAC9EC,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAN,WAAW,CAACM,QAAQ,CAACC,IAAI,CAACR,QAAQ,CAAC;MACnCG,UAAU,CAACI,QAAQ,CAACC,IAAI,CAACN,OAAO,CAAC;IACnC,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAI;MACd;MACAC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,KAAK,CAAC;IACvD,CAAC,CAAC;EACF,CAAC,EAAC,EAAE,CAAC;EAEL,IAAIG,IAAI,GAAGX,OAAO,CAACY,MAAM;EACzB,IAAIC,EAAE,GAAGb,OAAO,CAACa,EAAE;EACnB,IAAIC,MAAM,GAAGd,OAAO,CAACe,SAAS;EAC9B,IAAIC,QAAQ,GAAGhB,OAAO,CAACiB,MAAM;EAC7B,IAAIC,IAAI,GAAGlB,OAAO,CAACmB,SAAS,CAACD,IAAI;EACjC,IAAIE,IAAI,GAAGtB,QAAQ,CAACuB,IAAI;EAEzB,oBACI;IAAA,wBACI;MAAA,WAAI,wBAAsB,EAACD,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAErC;MAAA,WAAG,gBAAc,EAACT,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAC3B;MAAA,uBAAG;QAAK,GAAG,EAAEO,IAAK;QAAC,GAAG,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAAI,eAC5C;MAAA,WAAG,aAAW,EAACL,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACtB;MAAA,WAAG,aAAW,EAACG,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAC5B;MAAA,WAAG,kBAAgB,EAACF,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAE7B;AAIV,CAAC;AAAC,GAtCAlB,OAAO;AAAA,KAAPA,OAAO;AAwCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}