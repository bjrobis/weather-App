{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/Documents/GitHub/weather-App/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n//Import Components\nimport Header from './components/Header';\nimport Current from './components/Current';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [zipCode, setZipCode] = useState(\"\");\n  if (zipCode.length === 5) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Current, {\n        zipCode: zipCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"zipCode\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Zipcode: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"zipCode\",\n            name: \"zipCode\",\n            type: \"text\",\n            value: zipCode,\n            onChange: e => setZipCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }, this);\n  }\n}\n_s(App, \"zXN04dt+MEG0ryavoUZLL5Xf9+M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Current","App","zipCode","setZipCode","length","e","target","value"],"sources":["/Users/brandon/Documents/GitHub/weather-App/src/App.js"],"sourcesContent":["import React, {useState} from 'react'; \n\n\n//Import Components\nimport Header from './components/Header';\nimport Current from './components/Current';\n\n\nfunction App() {\n  let [zipCode, setZipCode] = useState(\"\"); \n\n  if (zipCode.length === 5) {\n    return (\n    <React.Fragment>\n      <Header />\n      <Current zipCode={zipCode} />\n    </React.Fragment>\n    )\n  } else {\n  return (\n  <React.Fragment>\n    <Header />\n    <div className=\"zipCode\">\n      <h3>Zipcode: <input \n                      id=\"zipCode\" \n                      name=\"zipCode\" \n                      type=\"text\" \n                      value={zipCode}\n                      onChange={(e) => setZipCode(e.target.value)} /></h3>  \n    </div>\n    </React.Fragment>\n  );\n  }\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;;AAGrC;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAAC;AAG3C,SAASC,GAAG,GAAG;EAAA;EACb,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAExC,IAAII,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE;IACxB,oBACA,QAAC,KAAK,CAAC,QAAQ;MAAA,wBACb,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,OAAO;QAAC,OAAO,EAAEF;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACd;EAEnB,CAAC,MAAM;IACP,oBACA,QAAC,KAAK,CAAC,QAAQ;MAAA,wBACb,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV;QAAK,SAAS,EAAC,SAAS;QAAA,uBACtB;UAAA,WAAI,WAAS;YACG,EAAE,EAAC,SAAS;YACZ,IAAI,EAAC,SAAS;YACd,IAAI,EAAC,MAAM;YACX,KAAK,EAAEA,OAAQ;YACf,QAAQ,EAAGG,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QAChE;IAAA;MAAA;MAAA;MAAA;IAAA,QACW;EAEnB;AACF;AAAC,GAzBQN,GAAG;AAAA,KAAHA,GAAG;AA2BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}